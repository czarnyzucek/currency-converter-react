{"version":3,"sources":["components/Header/index.js","components/Container/index.js","components/currencies.js","components/Form/Result/index.js","components/Form/index.js","components/Clock/index.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","title","className","Container","children","currencies","short","name","rate","Result","result","undefined","sourceAmount","toFixed","targetAmount","currency","Form","calculateResult","useState","setCurrency","amount","setAmount","onSubmit","event","preventDefault","value","onChange","target","type","step","min","required","map","formatDate","date","toLocaleString","weekday","hour","minute","second","day","month","Clock","Date","setDate","useEffect","intervalId","setInterval","clearInterval","App","setResult","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60105f8b.chunk.js","sourcesContent":["import \"./style.css\"\r\n\r\nconst Header = ({ title }) => (\r\n    <h1 className=\"header\">{title}</h1>\r\n);\r\n\r\nexport default Header;\r\n\r\n","import \"./style.css\"\r\n\r\nconst Container = ({ children }) => (\r\n    <div className=\"container\">\r\n        {children}\r\n    </div>\r\n);\r\n\r\nexport default Container;","export const currencies = [\r\n    {\r\n        short: \"EUR\",\r\n        name: \"Euro\",\r\n        rate: 4.56,\r\n    },\r\n    {\r\n        short: \"USD\",\r\n        name: \"Dolar amerykański\",\r\n        rate: 3.68,\r\n    },\r\n    {\r\n        short: \"GBP\",\r\n        name: \"Funt brytyjski\",\r\n        rate: 5.23,\r\n    },\r\n    {\r\n        short: \"CHF\",\r\n        name: \"Frank szwajcarski\",\r\n        rate: 4.12,\r\n    },\r\n];","import \"./style.css\";\r\n\r\nexport const Result = ({ result }) => (\r\n    <p className=\"form__result\">\r\n        {result !== undefined && (\r\n            <>\r\n                {result.sourceAmount.toFixed(2)}&nbsp;PLN&nbsp;=\r\n                {\" \"}\r\n                <strong>\r\n                    {result.targetAmount.toFixed(2)}&nbsp;{result.currency}\r\n                </strong>\r\n            </>\r\n        )}\r\n    </p>\r\n);","import \"./style.css\"\r\nimport { useState } from \"react\";\r\nimport { currencies } from \"../currencies\";\r\nimport { Result } from \"./Result\";\r\n\r\nexport const Form = ({ calculateResult, result }) => {\r\n    const [currency, setCurrency] = useState(currencies[0].short);\r\n    const [amount, setAmount] = useState(\"\");\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        calculateResult(currency, amount);\r\n    };\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onSubmit}>\r\n            <fieldset className=\"form__fieldset\">\r\n                <legend className=\"form__legend\">Kalkulator walut</legend>\r\n                <p className=\"form__pragraph\">\r\n                    <label className=\"form__label\">\r\n                        <span className=\"form__labelData\">Kwota w PLN:*</span>\r\n                        <input\r\n                            value={amount}\r\n                            onChange={({ target }) => setAmount(target.value)}\r\n                            className=\"form__field\"\r\n                            type=\"number\"\r\n                            name=\"amount\"\r\n                            step=\"0.10\"\r\n                            min=\"0\"\r\n                            required\r\n                        />\r\n                    </label>\r\n                </p>\r\n                <p className=\"form__pragraph\">\r\n                    <label className=\"form__label\">\r\n                        <span className=\"form__labelData \">Waluta:</span>\r\n                        <select\r\n                            className=\"form__field\"\r\n                            value={currency}\r\n                            onChange={({ target }) => setCurrency(target.value)}\r\n                        >\r\n                            {currencies.map((currency => (\r\n                                <option\r\n                                    key={currency.short}\r\n                                    value={currency.short}\r\n                                >\r\n                                    {currency.name}\r\n                                </option>\r\n                            )))}\r\n                        </select>\r\n                    </label>\r\n                </p>\r\n            </fieldset>\r\n            <div className=\"form__buttonsContener\">\r\n                <button className=\"form__button\">Przelicz</button>\r\n            </div>\r\n            <Result result={result} />\r\n            <p className=\"form__information\">*pole obowiązkowe</p>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import { useEffect, useState } from \"react\";\r\nimport \"./style.css\"\r\n\r\nconst formatDate = (date) => date.toLocaleString(undefined, {\r\n    weekday: \"long\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    second: \"2-digit\",\r\n    day: \"numeric\",\r\n    month: \"long\",\r\n});\r\n\r\nexport const Clock = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"clock\">\r\n            Dzisaj jest\r\n            {\" \"}\r\n            {formatDate(date)}\r\n        </div>\r\n    )\r\n};","import Header from \"./Header\";\r\nimport Container from \"./Container\";\r\nimport Form from \"./Form\";\r\nimport { Clock } from \"./Clock\";\r\nimport { useState } from \"react\";\r\nimport { currencies } from \"./currencies\";\r\n\r\nfunction App() {\r\n  const [result, setResult] = useState();\r\n\r\n  const calculateResult = (currency, amount) => {\r\n    const rate = currencies\r\n      .find(({ short }) => short === currency)\r\n      .rate;\r\n\r\n    setResult({\r\n      sourceAmount: +amount,\r\n      targetAmount: amount / rate,\r\n      currency,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Clock />\r\n      <Header title=\"Internetowy kantor\" />\r\n      <Form\r\n        result={result}\r\n        calculateResult={calculateResult}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}